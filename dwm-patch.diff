From abc45da944ddd0e30a04053b4b5da17b7b0fddae Mon Sep 17 00:00:00 2001
From: me <me@me.com>
Date: Tue, 9 Jan 2024 21:55:30 -0500
Subject: [PATCH] aaa

---
 config.def.h               |   9 +-
 config.h                   | 182 ++++++++++++++++
 config.h.orig              | 118 +++++++++++
 config.h.rej               | 375 +++++++++++++++++++++++++++++++++
 config.h_backup            | 115 +++++++++++
 config.mk                  |   2 +-
 drw.o                      | Bin 0 -> 10544 bytes
 dwm                        | Bin 0 -> 72536 bytes
 dwm.c                      | 219 +++++++++++++++++++-
 dwm.o                      | Bin 0 -> 66584 bytes
 patches/swallow_patch.diff | 411 +++++++++++++++++++++++++++++++++++++
 util.o                     | Bin 0 -> 2224 bytes
 12 files changed, 1422 insertions(+), 9 deletions(-)
 create mode 100644 config.h
 create mode 100644 config.h.orig
 create mode 100644 config.h.rej
 create mode 100644 config.h_backup
 create mode 100644 drw.o
 create mode 100755 dwm
 create mode 100644 dwm.o
 create mode 100644 patches/swallow_patch.diff
 create mode 100644 util.o

diff --git a/config.def.h b/config.def.h
index 1c0b587..4c0b25c 100644
--- a/config.def.h
+++ b/config.def.h
@@ -3,6 +3,7 @@
 /* appearance */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
+static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 static const char *fonts[]          = { "monospace:size=10" };
@@ -26,9 +27,11 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class     instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
+	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,        -1 },
+	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1 },
+	{ "st",      NULL,     NULL,           0,         0,          1,          -1,        -1 },
+	{ NULL,      NULL,     "Event Tester", 0,         1,          0,           1,        -1 }, /* xev */
 };
 
 /* layout(s) */
diff --git a/config.h b/config.h
new file mode 100644
index 0000000..0ffbbf0
--- /dev/null
+++ b/config.h
@@ -0,0 +1,182 @@
+/* See LICENSE file for copyright and license details. */
+
+/* appearance */
+static const unsigned int borderpx  = 4;        /* border pixel of windows */
+static const unsigned int snap      = 32;       /* snap pixel */
+static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
+static const int showbar            = 1;        /* 0 means no bar */
+static const int topbar             = 1;        /* 0 means bottom bar */
+static const char *fonts[]          = { "monospace:size=10" };
+static const char dmenufont[]       = "monospace:size=10";
+static const char col_gray1[]       = "#222222";
+static const char col_gray2[]       = "#444444";
+static const char col_gray3[]       = "#bbbbbb";
+static const char col_gray4[]       = "#eeeeee";
+static const char col_cyan[]        = "#005577";
+static const char *colors[][3]      = {
+	/*               fg         bg         border   */
+	[SchemeNorm] = { "#b8f2bb", "#44583e", "#745b5f" },
+	[SchemeSel]  = { "#ffe786", "#7a2a17", "#44583e"},
+};
+
+/* tagging */
+static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+
+static const Rule rules[] = {
+	/* xprop(1):
+	 *	WM_CLASS(STRING) = instance, class
+	 *	WM_NAME(STRING) = title
+	 */
+	/* class     instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
+	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,        -1 },
+	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1 },
+	{ "st",      NULL,     NULL,           0,         0,          1,          -1,        -1 },
+	{ NULL,      NULL,     "Event Tester", 0,         1,          0,           1,        -1 }, /* xev */
+};
+
+/* layout(s) */
+static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const int nmaster     = 1;    /* number of clients in master area */
+static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+
+static const Layout layouts[] = {
+	/* symbol     arrange function */
+	{ "[]=",      tile },    /* first entry is default */
+	{ "><>",      NULL },    /* no layout function means floating behavior */
+	{ "[M]",      monocle },
+};
+
+/* key definitions */
+#define MODKEY Mod4Mask
+#define TAGKEYS(KEY,TAG) \
+	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
+	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
+
+/* helper for spawning shell commands in the pre dwm-5.0 fashion */
+#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
+
+/* commands */
+
+//music
+static const char *upvol[] = { "amixer", "-q", "sset", "Master", "5%+", NULL };
+static const char *downvol[] = { "amixer", "-q", "sset", "Master", "5%-", NULL };
+static const char *mute[] = { "amixer", "-q", "-D", "pulse", "sset", "Master", "toggle", NULL };
+static const char *stop[] = { "cmus-remote", "-s" };
+static const char *prev[] = { "cmus-remote", "-r" };
+static const char *next[] = { "cmus-remote", "-n" };
+static const char *play[] = { "cmus-remote", "-u" };
+//video
+static const char *brightinc[] = { "sudo", "xbacklight", "-inc", "5" , "NULL"};
+static const char *brightdec[] = { "sudo", "xbacklight", "-dec", "5", "NULL" };
+//default
+static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", "#44583e", "-nf", "#b8f2bb", "-sb", "#880a1c", "-sf", "#ffd6ea", NULL };
+static const char *termcmd[]  = { "st", NULL };
+//applications
+static const char *godotcmd[] = { "godot", NULL };
+static const char *filecmd[]  = { "st", "-e", "vifm", "/home/tyler", NULL };
+static const char *newscmd[]  = { "akregator", NULL };
+static const char *kritacmd[] = { "krita", NULL };
+static const char *cmuscmd[]  = { "st", "-e", "cmus", NULL }; 
+static const char *strmcmd[]  = { "st", "-e", "obs", NULL};
+static const char *notescmd[]  = { "obsidian", NULL};
+static const char *idecmd[] = {"qtcreator", NULL};
+static const char *bluemancmd[] = {"blueman-manager", NULL};
+static const char *blendercmd[] = {"blender", NULL};
+static const char *browsercmd[] = {"trickle", "-d", "25","-u", "30000", "-t", ".1", "brave", NULL};
+static const char *mailcmd[] = {"thunderbird", NULL};
+static const char *libreofficecmd[] = {"libreoffice", NULL};
+static const char *nwpvulcmd[] = {"nwp", "vul", NULL};
+static const char *nwpkjvcmd[] = {"nwp", "kjv", NULL};
+static const char *nwpnotcmd[] = {"nwp", NULL};
+static const char *deinitcmd[] = {"export", "DWM_LIVE=false",NULL};
+
+
+static Key keys[] = {
+	/* modifier                     key        function        argument */
+	//music
+        { 0,              XF86XK_AudioRaiseVolume, spawn,          {.v = upvol } },
+        { 0,              XF86XK_AudioLowerVolume, spawn,          {.v = downvol } },
+        { 0,              XF86XK_AudioMute,        spawn,          {.v = mute } },
+        { 0,              XF86XK_AudioStop,    	   spawn,          {.v = stop } },
+        { 0,              XF86XK_AudioPrev,        spawn,          {.v = prev } },
+        { 0,              XF86XK_AudioNext,        spawn,          {.v = next } },
+        { 0,              XF86XK_AudioPlay,        spawn,          {.v = play } },
+	//video
+        { 0,              XF86XK_MonBrightnessUp,        spawn,          {.v = brightinc } },
+        { 0,              XF86XK_MonBrightnessDown,        spawn,          {.v = brightdec } },	
+	// spawn	
+	{ MODKEY,	        	XK_o,	   spawn,          {.v = strmcmd } },
+	{ MODKEY|ShiftMask,	        XK_o,	   spawn,          {.v = notescmd } },
+	{ MODKEY|ShiftMask,	        XK_n,	   spawn,          {.v = newscmd } },
+	{ MODKEY|ShiftMask,	        XK_m,	   spawn,          {.v = cmuscmd } },
+	{ MODKEY|ShiftMask,	        XK_k,	   spawn,          {.v = kritacmd } },
+	{ MODKEY|ShiftMask,	        XK_f,	   spawn,          {.v = filecmd } },
+	{ MODKEY|ShiftMask,	        XK_g,	   spawn,          {.v = godotcmd } },
+	{ MODKEY|ShiftMask,	        XK_p,	   spawn,          {.v = idecmd } },
+	{ MODKEY|ShiftMask,	        XK_b,	   spawn,          {.v = blendercmd } },
+	{ MODKEY|ShiftMask,	        XK_w,	   spawn,          {.v = bluemancmd } },
+	{ MODKEY|ShiftMask,	        XK_i,	   spawn,          {.v = browsercmd } },
+	{ MODKEY|ShiftMask,	        XK_t,	   spawn,          {.v = mailcmd } },
+	{ MODKEY|ShiftMask,	        XK_l,	   spawn,          {.v = libreofficecmd } },
+	//new wp
+	{ MODKEY,	        	XK_minus,  spawn,  	   {.v = nwpkjvcmd } },
+	{ MODKEY,	        	XK_equal,  spawn,  	   {.v = nwpvulcmd } },
+	{ MODKEY|ShiftMask,	        XK_minus,  spawn,  	   {.v = nwpnotcmd } },
+	//default
+	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,		        XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_b,      togglebar,      {0} },
+	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
+	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY,                       XK_g, 	   zoom,           {0} },
+	{ MODKEY,                       XK_Tab,    view,           {0} },
+	{ MODKEY,            		XK_c,      killclient,     {0} },
+	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_space,  setlayout,      {0} },
+	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
+	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
+	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
+	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	TAGKEYS(                        XK_1,                      0)
+	TAGKEYS(                        XK_2,                      1)
+	TAGKEYS(                        XK_3,                      2)
+	TAGKEYS(                        XK_4,                      3)
+	TAGKEYS(                        XK_5,                      4)
+	TAGKEYS(                        XK_6,                      5)
+	TAGKEYS(                        XK_7,                      6)
+	TAGKEYS(                        XK_8,                      7)
+	TAGKEYS(                        XK_9,                      8) 
+	{ MODKEY|ShiftMask,	        XK_q,	   spawn,          {.v = deinitcmd } },
+	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+
+};
+
+/* button definitions */
+/* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
+static Button buttons[] = {
+	/* click                event mask      button          function        argument */
+	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
+	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
+	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
+	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
+	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
+	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
+	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
+	{ ClkTagBar,            0,              Button1,        view,           {0} },
+	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
+	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
+	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
+};
+
diff --git a/config.h.orig b/config.h.orig
new file mode 100644
index 0000000..f48a9c4
--- /dev/null
+++ b/config.h.orig
@@ -0,0 +1,118 @@
+/* See LICENSE file for copyright and license details. */
+
+/* appearance */
+static const unsigned int borderpx  = 4;        /* border pixel of windows */
+static const unsigned int snap      = 32;       /* snap pixel */
+static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
+static const int showbar            = 1;        /* 0 means no bar */
+static const int topbar             = 1;        /* 0 means bottom bar */
+static const char *fonts[]          = { "monospace:size=10" };
+static const char dmenufont[]       = "monospace:size=10";
+static const char col_gray1[]       = "#222222";
+static const char col_gray2[]       = "#444444";
+static const char col_gray3[]       = "#bbbbbb";
+static const char col_gray4[]       = "#eeeeee";
+static const char col_cyan[]        = "#005577";
+static const char *colors[][3]      = {
+	/*               fg         bg         border   */
+	[SchemeNorm] = { "#b8f2bb", "#44583e", "#745b5f" },
+	[SchemeSel]  = { "#ffe786", "#7a2a17", "#44583e"},
+};
+
+/* tagging */
+static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+
+static const Rule rules[] = {
+	/* xprop(1):
+	 *	WM_CLASS(STRING) = instance, class
+	 *	WM_NAME(STRING) = title
+	 */
+	/* class     instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
+	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,        -1 },
+	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1 },
+	{ "st",      NULL,     NULL,           0,         0,          1,          -1,        -1 },
+	{ NULL,      NULL,     "Event Tester", 0,         1,          0,           1,        -1 }, /* xev */
+};
+
+/* layout(s) */
+static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const int nmaster     = 1;    /* number of clients in master area */
+static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+
+static const Layout layouts[] = {
+	/* symbol     arrange function */
+	{ "[]=",      tile },    /* first entry is default */
+	{ "><>",      NULL },    /* no layout function means floating behavior */
+	{ "[M]",      monocle },
+};
+
+/* key definitions */
+#define MODKEY Mod4Mask
+#define TAGKEYS(KEY,TAG) \
+	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
+	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
+
+/* helper for spawning shell commands in the pre dwm-5.0 fashion */
+#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
+
+/* commands */
+static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", "#44583e", "-nf", "#b8f2bb", "-sb", "#880a1c", "-sf", "#ffd6ea", NULL };
+static const char *termcmd[]  = { "st", NULL };
+
+static Key keys[] = {
+	/* modifier                     key        function        argument */
+	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,		        XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_b,      togglebar,      {0} },
+	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
+	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY,                       XK_Return, zoom,           {0} },
+	{ MODKEY,                       XK_Tab,    view,           {0} },
+	{ MODKEY,            		XK_c,      killclient,     {0} },
+	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_space,  setlayout,      {0} },
+	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
+	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
+	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
+	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	TAGKEYS(                        XK_1,                      0)
+	TAGKEYS(                        XK_2,                      1)
+	TAGKEYS(                        XK_3,                      2)
+	TAGKEYS(                        XK_4,                      3)
+	TAGKEYS(                        XK_5,                      4)
+	TAGKEYS(                        XK_6,                      5)
+	TAGKEYS(                        XK_7,                      6)
+	TAGKEYS(                        XK_8,                      7)
+	TAGKEYS(                        XK_9,                      8)
+	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+};
+
+/* button definitions */
+/* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
+static Button buttons[] = {
+	/* click                event mask      button          function        argument */
+	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
+	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
+	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
+	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
+	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
+	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
+	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
+	{ ClkTagBar,            0,              Button1,        view,           {0} },
+	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
+	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
+	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
+};
+
diff --git a/config.h.rej b/config.h.rej
new file mode 100644
index 0000000..037dd73
--- /dev/null
+++ b/config.h.rej
@@ -0,0 +1,375 @@
+--- config.mk
++++ config.mk
+@@ -22,7 +22,7 @@ FREETYPEINC = /usr/include/freetype2
+ 
+ # includes and libs
+ INCS = -I${X11INC} -I${FREETYPEINC}
+-LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}
++LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lX11-xcb -lxcb -lxcb-res
+ 
+ # flags
+ CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
+--- dwm.c
++++ dwm.c
+@@ -40,6 +40,8 @@
+ #include <X11/extensions/Xinerama.h>
+ #endif /* XINERAMA */
+ #include <X11/Xft/Xft.h>
++#include <X11/Xlib-xcb.h>
++#include <xcb/res.h>
+ 
+ #include "drw.h"
+ #include "util.h"
+@@ -92,9 +94,11 @@ struct Client {
+ 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
+ 	int bw, oldbw;
+ 	unsigned int tags;
+-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
++	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;
++	pid_t pid;
+ 	Client *next;
+ 	Client *snext;
++	Client *swallowing;
+ 	Monitor *mon;
+ 	Window win;
+ };
+@@ -138,6 +142,8 @@ typedef struct {
+ 	const char *title;
+ 	unsigned int tags;
+ 	int isfloating;
++	int isterminal;
++	int noswallow;
+ 	int monitor;
+ } Rule;
+ 
+@@ -235,9 +241,16 @@ static int xerrordummy(Display *dpy, XErrorEvent *ee);
+ static int xerrorstart(Display *dpy, XErrorEvent *ee);
+ static void zoom(const Arg *arg);
+ 
++static pid_t getparentprocess(pid_t p);
++static int isdescprocess(pid_t p, pid_t c);
++static Client *swallowingclient(Window w);
++static Client *termforwin(const Client *c);
++static pid_t winpid(Window w);
++
+ /* variables */
+ static const char broken[] = "broken";
+ static char stext[256];
++static int scanner;
+ static int screen;
+ static int sw, sh;           /* X display screen geometry width, height */
+ static int bh, blw = 0;      /* bar geometry */
+@@ -269,6 +282,8 @@ static Drw *drw;
+ static Monitor *mons, *selmon;
+ static Window root, wmcheckwin;
+ 
++static xcb_connection_t *xcon;
++
+ /* configuration, allows nested code to access above variables */
+ #include "config.h"
+ 
+@@ -286,6 +301,7 @@ applyrules(Client *c)
+ 	XClassHint ch = { NULL, NULL };
+ 
+ 	/* rule matching */
++	c->noswallow = -1;
+ 	c->isfloating = 0;
+ 	c->tags = 0;
+ 	XGetClassHint(dpy, c->win, &ch);
+@@ -298,6 +314,8 @@ applyrules(Client *c)
+ 		&& (!r->class || strstr(class, r->class))
+ 		&& (!r->instance || strstr(instance, r->instance)))
+ 		{
++			c->isterminal = r->isterminal;
++			c->noswallow  = r->noswallow;
+ 			c->isfloating = r->isfloating;
+ 			c->tags |= r->tags;
+ 			for (m = mons; m && m->num != r->monitor; m = m->next);
+@@ -414,6 +432,61 @@ attachstack(Client *c)
+ 	c->mon->stack = c;
+ }
+ 
++void
++swallow(Client *p, Client *c)
++{
++	Client *s;
++
++	if (c->noswallow > 0 || c->isterminal)
++		return;
++	if (c->noswallow < 0 && !swallowfloating && c->isfloating)
++		return;
++
++	detach(c);
++	detachstack(c);
++
++	setclientstate(c, WithdrawnState);
++	XUnmapWindow(dpy, p->win);
++
++	p->swallowing = c;
++	c->mon = p->mon;
++
++	Window w = p->win;
++	p->win = c->win;
++	c->win = w;
++
++	XChangeProperty(dpy, c->win, netatom[NetClientList], XA_WINDOW, 32, PropModeReplace,
++		(unsigned char *) &(p->win), 1);
++
++	updatetitle(p);
++	s = scanner ? c : p;
++	XMoveResizeWindow(dpy, p->win, s->x, s->y, s->w, s->h);
++	arrange(p->mon);
++	configure(p);
++	updateclientlist();
++}
++
++void
++unswallow(Client *c)
++{
++	c->win = c->swallowing->win;
++
++	free(c->swallowing);
++	c->swallowing = NULL;
++
++	XDeleteProperty(dpy, c->win, netatom[NetClientList]);
++
++	/* unfullscreen the client */
++	setfullscreen(c, 0);
++	updatetitle(c);
++	arrange(c->mon);
++	XMapWindow(dpy, c->win);
++	XMoveResizeWindow(dpy, c->win, c->x, c->y, c->w, c->h);
++	setclientstate(c, NormalState);
++	focus(NULL);
++	arrange(c->mon);
++}
++
+ void
+ buttonpress(XEvent *e)
+ {
+@@ -653,6 +726,9 @@ destroynotify(XEvent *e)
+ 
+ 	if ((c = wintoclient(ev->window)))
+ 		unmanage(c, 1);
++
++	else if ((c = swallowingclient(ev->window)))
++		unmanage(c->swallowing, 1);
+ }
+ 
+ void
+@@ -1018,12 +1094,13 @@ killclient(const Arg *arg)
+ void
+ manage(Window w, XWindowAttributes *wa)
+ {
+-	Client *c, *t = NULL;
++	Client *c, *t = NULL, *term = NULL;
+ 	Window trans = None;
+ 	XWindowChanges wc;
+ 
+ 	c = ecalloc(1, sizeof(Client));
+ 	c->win = w;
++	c->pid = winpid(w);
+ 	/* geometry */
+ 	c->x = c->oldx = wa->x;
+ 	c->y = c->oldy = wa->y;
+@@ -1038,6 +1115,7 @@ manage(Window w, XWindowAttributes *wa)
+ 	} else {
+ 		c->mon = selmon;
+ 		applyrules(c);
++		term = termforwin(c);
+ 	}
+ 
+ 	if (c->x + WIDTH(c) > c->mon->mx + c->mon->mw)
+@@ -1074,6 +1152,8 @@ manage(Window w, XWindowAttributes *wa)
+ 	c->mon->sel = c;
+ 	arrange(c->mon);
+ 	XMapWindow(dpy, c->win);
++	if (term)
++		swallow(term, c);
+ 	focus(NULL);
+ }
+ 
+@@ -1384,7 +1464,9 @@ run(void)
+ void
+ scan(void)
+ {
++	scanner = 1;
+ 	unsigned int i, num;
++	char swin[256];
+ 	Window d1, d2, *wins = NULL;
+ 	XWindowAttributes wa;
+ 
+@@ -1395,6 +1477,8 @@ scan(void)
+ 				continue;
+ 			if (wa.map_state == IsViewable || getstate(wins[i]) == IconicState)
+ 				manage(wins[i], &wa);
++			else if (gettextprop(wins[i], netatom[NetClientList], swin, sizeof swin))
++				manage(wins[i], &wa);
+ 		}
+ 		for (i = 0; i < num; i++) { /* now the transients */
+ 			if (!XGetWindowAttributes(dpy, wins[i], &wa))
+@@ -1406,6 +1490,7 @@ scan(void)
+ 		if (wins)
+ 			XFree(wins);
+ 	}
++	scanner = 0;
+ }
+ 
+ void
+@@ -1768,6 +1853,20 @@ unmanage(Client *c, int destroyed)
+ 	Monitor *m = c->mon;
+ 	XWindowChanges wc;
+ 
++	if (c->swallowing) {
++		unswallow(c);
++		return;
++	}
++
++	Client *s = swallowingclient(c->win);
++	if (s) {
++		free(s->swallowing);
++		s->swallowing = NULL;
++		arrange(m);
++		focus(NULL);
++		return;
++	}
++
+ 	detach(c);
+ 	detachstack(c);
+ 	if (!destroyed) {
+@@ -1782,9 +1881,12 @@ unmanage(Client *c, int destroyed)
+ 		XUngrabServer(dpy);
+ 	}
+ 	free(c);
+-	focus(NULL);
+-	updateclientlist();
+-	arrange(m);
++
++	if (!s) {
++		arrange(m);
++		focus(NULL);
++		updateclientlist();
++	}
+ }
+ 
+ void
+@@ -2047,6 +2149,110 @@ view(const Arg *arg)
+ 	arrange(selmon);
+ }
+ 
++pid_t
++winpid(Window w)
++{
++	pid_t result = 0;
++
++	xcb_res_client_id_spec_t spec = {0};
++	spec.client = w;
++	spec.mask = XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID;
++
++	xcb_generic_error_t *e = NULL;
++	xcb_res_query_client_ids_cookie_t c = xcb_res_query_client_ids(xcon, 1, &spec);
++	xcb_res_query_client_ids_reply_t *r = xcb_res_query_client_ids_reply(xcon, c, &e);
++
++	if (!r)
++		return (pid_t)0;
++
++	xcb_res_client_id_value_iterator_t i = xcb_res_query_client_ids_ids_iterator(r);
++	for (; i.rem; xcb_res_client_id_value_next(&i)) {
++		spec = i.data->spec;
++		if (spec.mask & XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID) {
++			uint32_t *t = xcb_res_client_id_value_value(i.data);
++			result = *t;
++			break;
++		}
++	}
++
++	free(r);
++
++	if (result == (pid_t)-1)
++		result = 0;
++	return result;
++}
++
++pid_t
++getparentprocess(pid_t p)
++{
++	unsigned int v = 0;
++
++#if defined(__linux__)
++	FILE *f;
++	char buf[256];
++	snprintf(buf, sizeof(buf) - 1, "/proc/%u/stat", (unsigned)p);
++
++	if (!(f = fopen(buf, "r")))
++		return (pid_t)0;
++
++	if (fscanf(f, "%*u %*s %*c %u", (unsigned *)&v) != 1)
++		v = (pid_t)0;
++	fclose(f);
++#elif defined(__FreeBSD__)
++	struct kinfo_proc *proc = kinfo_getproc(p);
++	if (!proc)
++		return (pid_t)0;
++
++	v = proc->ki_ppid;
++	free(proc);
++#endif
++	return (pid_t)v;
++}
++
++int
++isdescprocess(pid_t p, pid_t c)
++{
++	while (p != c && c != 0)
++		c = getparentprocess(c);
++
++	return (int)c;
++}
++
++Client *
++termforwin(const Client *w)
++{
++	Client *c;
++	Monitor *m;
++
++	if (!w->pid || w->isterminal)
++		return NULL;
++
++	for (m = mons; m; m = m->next) {
++		for (c = m->clients; c; c = c->next) {
++			if (c->isterminal && !c->swallowing && c->pid && isdescprocess(c->pid, w->pid))
++				return c;
++		}
++	}
++
++	return NULL;
++}
++
++Client *
++swallowingclient(Window w)
++{
++	Client *c;
++	Monitor *m;
++
++	for (m = mons; m; m = m->next) {
++		for (c = m->clients; c; c = c->next) {
++			if (c->swallowing && c->swallowing->win == w)
++				return c;
++		}
++	}
++
++	return NULL;
++}
++
+ Client *
+ wintoclient(Window w)
+ {
+@@ -2138,6 +2344,8 @@ main(int argc, char *argv[])
+ 		fputs("warning: no locale support\n", stderr);
+ 	if (!(dpy = XOpenDisplay(NULL)))
+ 		die("dwm: cannot open display");
++	if (!(xcon = XGetXCBConnection(dpy)))
++		die("dwm: cannot get xcb connection\n");
+ 	checkotherwm();
+ 	setup();
+ #ifdef __OpenBSD__
diff --git a/config.h_backup b/config.h_backup
new file mode 100644
index 0000000..434006c
--- /dev/null
+++ b/config.h_backup
@@ -0,0 +1,115 @@
+/* See LICENSE file for copyright and license details. */
+
+/* appearance */
+static const unsigned int borderpx  = 4;        /* border pixel of windows */
+static const unsigned int snap      = 32;       /* snap pixel */
+static const int showbar            = 1;        /* 0 means no bar */
+static const int topbar             = 1;        /* 0 means bottom bar */
+static const char *fonts[]          = { "monospace:size=10" };
+static const char dmenufont[]       = "monospace:size=10";
+static const char col_gray1[]       = "#222222";
+static const char col_gray2[]       = "#444444";
+static const char col_gray3[]       = "#bbbbbb";
+static const char col_gray4[]       = "#eeeeee";
+static const char col_cyan[]        = "#005577";
+static const char *colors[][3]      = {
+	/*               fg         bg         border   */
+	[SchemeNorm] = { "#b8f2bb", "#44583e", "#745b5f" },
+	[SchemeSel]  = { "#ffe786", "#7a2a17", "#44583e"},
+};
+
+/* tagging */
+static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+
+static const Rule rules[] = {
+	/* xprop(1):
+	 *	WM_CLASS(STRING) = instance, class
+	 *	WM_NAME(STRING) = title
+	 */
+	/* class      instance    title       tags mask     isfloating   monitor */
+	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
+	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+};
+
+/* layout(s) */
+static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const int nmaster     = 1;    /* number of clients in master area */
+static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+
+static const Layout layouts[] = {
+	/* symbol     arrange function */
+	{ "[]=",      tile },    /* first entry is default */
+	{ "><>",      NULL },    /* no layout function means floating behavior */
+	{ "[M]",      monocle },
+};
+
+/* key definitions */
+#define MODKEY Mod4Mask
+#define TAGKEYS(KEY,TAG) \
+	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
+	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
+
+/* helper for spawning shell commands in the pre dwm-5.0 fashion */
+#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
+
+/* commands */
+static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", "#44583e", "-nf", "#b8f2bb", "-sb", "#880a1c", "-sf", "#ffd6ea", NULL };
+static const char *termcmd[]  = { "st", NULL };
+
+static Key keys[] = {
+	/* modifier                     key        function        argument */
+	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,		        XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_b,      togglebar,      {0} },
+	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
+	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
+	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY,                       XK_Return, zoom,           {0} },
+	{ MODKEY,                       XK_Tab,    view,           {0} },
+	{ MODKEY,            		XK_c,      killclient,     {0} },
+	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_space,  setlayout,      {0} },
+	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
+	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
+	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
+	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	TAGKEYS(                        XK_1,                      0)
+	TAGKEYS(                        XK_2,                      1)
+	TAGKEYS(                        XK_3,                      2)
+	TAGKEYS(                        XK_4,                      3)
+	TAGKEYS(                        XK_5,                      4)
+	TAGKEYS(                        XK_6,                      5)
+	TAGKEYS(                        XK_7,                      6)
+	TAGKEYS(                        XK_8,                      7)
+	TAGKEYS(                        XK_9,                      8)
+	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+};
+
+/* button definitions */
+/* click can be ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
+static Button buttons[] = {
+	/* click                event mask      button          function        argument */
+	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
+	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
+	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
+	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
+	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
+	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
+	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
+	{ ClkTagBar,            0,              Button1,        view,           {0} },
+	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
+	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
+	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
+};
+
diff --git a/config.mk b/config.mk
index 7084c33..b77641d 100644
--- a/config.mk
+++ b/config.mk
@@ -22,7 +22,7 @@ FREETYPEINC = /usr/include/freetype2
 
 # includes and libs
 INCS = -I${X11INC} -I${FREETYPEINC}
-LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}
+LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lX11-xcb -lxcb -lxcb-res
 
 # flags
 CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
diff --git a/drw.o b/drw.o
new file mode 100644
index 0000000000000000000000000000000000000000..6022adbb57d34d6c228721b7e4ca6bd309a661fe
GIT binary patch
literal 10544
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
Tagm6=V`1?zD$Zx}?dJb)=^|L)

literal 0
HcmV?d00001

diff --git a/dwm b/dwm
new file mode 100755
index 0000000000000000000000000000000000000000..dae764a2941e1864a73c40d07fcc714673157001
GIT binary patch
literal 72536
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

literal 0
HcmV?d00001

diff --git a/dwm.c b/dwm.c
index 9fd0286..1b68f91 100644
--- a/dwm.c
+++ b/dwm.c
@@ -32,6 +32,7 @@
 #include <sys/wait.h>
 #include <X11/cursorfont.h>
 #include <X11/keysym.h>
+#include <X11/XF86keysym.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
 #include <X11/Xproto.h>
@@ -40,6 +41,8 @@
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
 #include <X11/Xft/Xft.h>
+#include <X11/Xlib-xcb.h>
+#include <xcb/res.h>
 
 #include "drw.h"
 #include "util.h"
@@ -92,9 +95,11 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
+	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;
+	pid_t pid;
 	Client *next;
 	Client *snext;
+	Client *swallowing;
 	Monitor *mon;
 	Window win;
 };
@@ -138,6 +143,8 @@ typedef struct {
 	const char *title;
 	unsigned int tags;
 	int isfloating;
+	int isterminal;
+	int noswallow;
 	int monitor;
 } Rule;
 
@@ -235,9 +242,16 @@ static int xerrordummy(Display *dpy, XErrorEvent *ee);
 static int xerrorstart(Display *dpy, XErrorEvent *ee);
 static void zoom(const Arg *arg);
 
+static pid_t getparentprocess(pid_t p);
+static int isdescprocess(pid_t p, pid_t c);
+static Client *swallowingclient(Window w);
+static Client *termforwin(const Client *c);
+static pid_t winpid(Window w);
+
 /* variables */
 static const char broken[] = "broken";
 static char stext[256];
+static int scanner;
 static int screen;
 static int sw, sh;           /* X display screen geometry width, height */
 static int bh, blw = 0;      /* bar geometry */
@@ -269,6 +283,8 @@ static Drw *drw;
 static Monitor *mons, *selmon;
 static Window root, wmcheckwin;
 
+static xcb_connection_t *xcon;
+
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
@@ -286,6 +302,7 @@ applyrules(Client *c)
 	XClassHint ch = { NULL, NULL };
 
 	/* rule matching */
+	c->noswallow = -1;
 	c->isfloating = 0;
 	c->tags = 0;
 	XGetClassHint(dpy, c->win, &ch);
@@ -298,6 +315,8 @@ applyrules(Client *c)
 		&& (!r->class || strstr(class, r->class))
 		&& (!r->instance || strstr(instance, r->instance)))
 		{
+			c->isterminal = r->isterminal;
+			c->noswallow  = r->noswallow;
 			c->isfloating = r->isfloating;
 			c->tags |= r->tags;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
@@ -414,6 +433,61 @@ attachstack(Client *c)
 	c->mon->stack = c;
 }
 
+void
+swallow(Client *p, Client *c)
+{
+	Client *s;
+
+	if (c->noswallow > 0 || c->isterminal)
+		return;
+	if (c->noswallow < 0 && !swallowfloating && c->isfloating)
+		return;
+
+	detach(c);
+	detachstack(c);
+
+	setclientstate(c, WithdrawnState);
+	XUnmapWindow(dpy, p->win);
+
+	p->swallowing = c;
+	c->mon = p->mon;
+
+	Window w = p->win;
+	p->win = c->win;
+	c->win = w;
+
+	XChangeProperty(dpy, c->win, netatom[NetClientList], XA_WINDOW, 32, PropModeReplace,
+		(unsigned char *) &(p->win), 1);
+
+	updatetitle(p);
+	s = scanner ? c : p;
+	XMoveResizeWindow(dpy, p->win, s->x, s->y, s->w, s->h);
+	arrange(p->mon);
+	configure(p);
+	updateclientlist();
+}
+
+void
+unswallow(Client *c)
+{
+	c->win = c->swallowing->win;
+
+	free(c->swallowing);
+	c->swallowing = NULL;
+
+	XDeleteProperty(dpy, c->win, netatom[NetClientList]);
+
+	/* unfullscreen the client */
+	setfullscreen(c, 0);
+	updatetitle(c);
+	arrange(c->mon);
+	XMapWindow(dpy, c->win);
+	XMoveResizeWindow(dpy, c->win, c->x, c->y, c->w, c->h);
+	setclientstate(c, NormalState);
+	focus(NULL);
+	arrange(c->mon);
+}
+
 void
 buttonpress(XEvent *e)
 {
@@ -653,6 +727,9 @@ destroynotify(XEvent *e)
 
 	if ((c = wintoclient(ev->window)))
 		unmanage(c, 1);
+
+	else if ((c = swallowingclient(ev->window)))
+		unmanage(c->swallowing, 1);
 }
 
 void
@@ -1018,12 +1095,13 @@ killclient(const Arg *arg)
 void
 manage(Window w, XWindowAttributes *wa)
 {
-	Client *c, *t = NULL;
+	Client *c, *t = NULL, *term = NULL;
 	Window trans = None;
 	XWindowChanges wc;
 
 	c = ecalloc(1, sizeof(Client));
 	c->win = w;
+	c->pid = winpid(w);
 	/* geometry */
 	c->x = c->oldx = wa->x;
 	c->y = c->oldy = wa->y;
@@ -1038,6 +1116,7 @@ manage(Window w, XWindowAttributes *wa)
 	} else {
 		c->mon = selmon;
 		applyrules(c);
+		term = termforwin(c);
 	}
 
 	if (c->x + WIDTH(c) > c->mon->mx + c->mon->mw)
@@ -1074,6 +1153,8 @@ manage(Window w, XWindowAttributes *wa)
 	c->mon->sel = c;
 	arrange(c->mon);
 	XMapWindow(dpy, c->win);
+	if (term)
+		swallow(term, c);
 	focus(NULL);
 }
 
@@ -1384,7 +1465,9 @@ run(void)
 void
 scan(void)
 {
+	scanner = 1;
 	unsigned int i, num;
+	char swin[256];
 	Window d1, d2, *wins = NULL;
 	XWindowAttributes wa;
 
@@ -1395,6 +1478,8 @@ scan(void)
 				continue;
 			if (wa.map_state == IsViewable || getstate(wins[i]) == IconicState)
 				manage(wins[i], &wa);
+			else if (gettextprop(wins[i], netatom[NetClientList], swin, sizeof swin))
+				manage(wins[i], &wa);
 		}
 		for (i = 0; i < num; i++) { /* now the transients */
 			if (!XGetWindowAttributes(dpy, wins[i], &wa))
@@ -1406,6 +1491,7 @@ scan(void)
 		if (wins)
 			XFree(wins);
 	}
+	scanner = 0;
 }
 
 void
@@ -1768,6 +1854,20 @@ unmanage(Client *c, int destroyed)
 	Monitor *m = c->mon;
 	XWindowChanges wc;
 
+	if (c->swallowing) {
+		unswallow(c);
+		return;
+	}
+
+	Client *s = swallowingclient(c->win);
+	if (s) {
+		free(s->swallowing);
+		s->swallowing = NULL;
+		arrange(m);
+		focus(NULL);
+		return;
+	}
+
 	detach(c);
 	detachstack(c);
 	if (!destroyed) {
@@ -1782,9 +1882,12 @@ unmanage(Client *c, int destroyed)
 		XUngrabServer(dpy);
 	}
 	free(c);
-	focus(NULL);
-	updateclientlist();
-	arrange(m);
+
+	if (!s) {
+		arrange(m);
+		focus(NULL);
+		updateclientlist();
+	}
 }
 
 void
@@ -2047,6 +2150,110 @@ view(const Arg *arg)
 	arrange(selmon);
 }
 
+pid_t
+winpid(Window w)
+{
+	pid_t result = 0;
+
+	xcb_res_client_id_spec_t spec = {0};
+	spec.client = w;
+	spec.mask = XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID;
+
+	xcb_generic_error_t *e = NULL;
+	xcb_res_query_client_ids_cookie_t c = xcb_res_query_client_ids(xcon, 1, &spec);
+	xcb_res_query_client_ids_reply_t *r = xcb_res_query_client_ids_reply(xcon, c, &e);
+
+	if (!r)
+		return (pid_t)0;
+
+	xcb_res_client_id_value_iterator_t i = xcb_res_query_client_ids_ids_iterator(r);
+	for (; i.rem; xcb_res_client_id_value_next(&i)) {
+		spec = i.data->spec;
+		if (spec.mask & XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID) {
+			uint32_t *t = xcb_res_client_id_value_value(i.data);
+			result = *t;
+			break;
+		}
+	}
+
+	free(r);
+
+	if (result == (pid_t)-1)
+		result = 0;
+	return result;
+}
+
+pid_t
+getparentprocess(pid_t p)
+{
+	unsigned int v = 0;
+
+#if defined(__linux__)
+	FILE *f;
+	char buf[256];
+	snprintf(buf, sizeof(buf) - 1, "/proc/%u/stat", (unsigned)p);
+
+	if (!(f = fopen(buf, "r")))
+		return (pid_t)0;
+
+	if (fscanf(f, "%*u %*s %*c %u", (unsigned *)&v) != 1)
+		v = (pid_t)0;
+	fclose(f);
+#elif defined(__FreeBSD__)
+	struct kinfo_proc *proc = kinfo_getproc(p);
+	if (!proc)
+		return (pid_t)0;
+
+	v = proc->ki_ppid;
+	free(proc);
+#endif
+	return (pid_t)v;
+}
+
+int
+isdescprocess(pid_t p, pid_t c)
+{
+	while (p != c && c != 0)
+		c = getparentprocess(c);
+
+	return (int)c;
+}
+
+Client *
+termforwin(const Client *w)
+{
+	Client *c;
+	Monitor *m;
+
+	if (!w->pid || w->isterminal)
+		return NULL;
+
+	for (m = mons; m; m = m->next) {
+		for (c = m->clients; c; c = c->next) {
+			if (c->isterminal && !c->swallowing && c->pid && isdescprocess(c->pid, w->pid))
+				return c;
+		}
+	}
+
+	return NULL;
+}
+
+Client *
+swallowingclient(Window w)
+{
+	Client *c;
+	Monitor *m;
+
+	for (m = mons; m; m = m->next) {
+		for (c = m->clients; c; c = c->next) {
+			if (c->swallowing && c->swallowing->win == w)
+				return c;
+		}
+	}
+
+	return NULL;
+}
+
 Client *
 wintoclient(Window w)
 {
@@ -2138,6 +2345,8 @@ main(int argc, char *argv[])
 		fputs("warning: no locale support\n", stderr);
 	if (!(dpy = XOpenDisplay(NULL)))
 		die("dwm: cannot open display");
+	if (!(xcon = XGetXCBConnection(dpy)))
+		die("dwm: cannot get xcb connection\n");
 	checkotherwm();
 	setup();
 #ifdef __OpenBSD__
diff --git a/dwm.o b/dwm.o
new file mode 100644
index 0000000000000000000000000000000000000000..c34a2c6e976075914adbb79907a34ac037c4092f
GIT binary patch
literal 66584
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%0Dn3Fe=Pt%9DrwL9b3-q
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

literal 0
HcmV?d00001

diff --git a/patches/swallow_patch.diff b/patches/swallow_patch.diff
new file mode 100644
index 0000000..e1bf506
--- /dev/null
+++ b/patches/swallow_patch.diff
@@ -0,0 +1,411 @@
+       | 218 +++++++++++++++++++++++++++++++++++++++++++++++++--
+ 3 files changed, 220 insertions(+), 9 deletions(-)
+
+diff --git a/config.def.h b/config.def.h
+index 1c0b587..4c0b25c 100644
+--- a/config.def.h
++++ b/config.def.h
+@@ -3,6 +3,7 @@
+ /* appearance */
+ static const unsigned int borderpx  = 1;        /* border pixel of windows */
+ static const unsigned int snap      = 32;       /* snap pixel */
++static const int swallowfloating    = 0;        /* 1 means swallow floating windows by default */
+ static const int showbar            = 1;        /* 0 means no bar */
+ static const int topbar             = 1;        /* 0 means bottom bar */
+ static const char *fonts[]          = { "monospace:size=10" };
+@@ -26,9 +27,11 @@ static const Rule rules[] = {
+ 	 *	WM_CLASS(STRING) = instance, class
+ 	 *	WM_NAME(STRING) = title
+ 	 */
+-	/* class      instance    title       tags mask     isfloating   monitor */
+-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
+-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
++	/* class     instance  title           tags mask  isfloating  isterminal  noswallow  monitor */
++	{ "Gimp",    NULL,     NULL,           0,         1,          0,           0,        -1 },
++	{ "Firefox", NULL,     NULL,           1 << 8,    0,          0,          -1,        -1 },
++	{ "st",      NULL,     NULL,           0,         0,          1,          -1,        -1 },
++	{ NULL,      NULL,     "Event Tester", 0,         1,          0,           1,        -1 }, /* xev */
+ };
+ 
+ /* layout(s) */
+diff --git a/config.mk b/config.mk
+index 7084c33..b77641d 100644
+--- a/config.mk
++++ b/config.mk
+@@ -22,7 +22,7 @@ FREETYPEINC = /usr/include/freetype2
+ 
+ # includes and libs
+ INCS = -I${X11INC} -I${FREETYPEINC}
+-LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}
++LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS} -lX11-xcb -lxcb -lxcb-res
+ 
+ # flags
+ CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\"${VERSION}\" ${XINERAMAFLAGS}
+diff --git a/dwm.c b/dwm.c
+index 9fd0286..1befee4 100644
+--- a/dwm.c
++++ b/dwm.c
+@@ -40,6 +40,8 @@
+ #include <X11/extensions/Xinerama.h>
+ #endif /* XINERAMA */
+ #include <X11/Xft/Xft.h>
++#include <X11/Xlib-xcb.h>
++#include <xcb/res.h>
+ 
+ #include "drw.h"
+ #include "util.h"
+@@ -92,9 +94,11 @@ struct Client {
+ 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
+ 	int bw, oldbw;
+ 	unsigned int tags;
+-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;
++	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, isterminal, noswallow;
++	pid_t pid;
+ 	Client *next;
+ 	Client *snext;
++	Client *swallowing;
+ 	Monitor *mon;
+ 	Window win;
+ };
+@@ -138,6 +142,8 @@ typedef struct {
+ 	const char *title;
+ 	unsigned int tags;
+ 	int isfloating;
++	int isterminal;
++	int noswallow;
+ 	int monitor;
+ } Rule;
+ 
+@@ -235,9 +241,16 @@ static int xerrordummy(Display *dpy, XErrorEvent *ee);
+ static int xerrorstart(Display *dpy, XErrorEvent *ee);
+ static void zoom(const Arg *arg);
+ 
++static pid_t getparentprocess(pid_t p);
++static int isdescprocess(pid_t p, pid_t c);
++static Client *swallowingclient(Window w);
++static Client *termforwin(const Client *c);
++static pid_t winpid(Window w);
++
+ /* variables */
+ static const char broken[] = "broken";
+ static char stext[256];
++static int scanner;
+ static int screen;
+ static int sw, sh;           /* X display screen geometry width, height */
+ static int bh, blw = 0;      /* bar geometry */
+@@ -269,6 +282,8 @@ static Drw *drw;
+ static Monitor *mons, *selmon;
+ static Window root, wmcheckwin;
+ 
++static xcb_connection_t *xcon;
++
+ /* configuration, allows nested code to access above variables */
+ #include "config.h"
+ 
+@@ -286,6 +301,7 @@ applyrules(Client *c)
+ 	XClassHint ch = { NULL, NULL };
+ 
+ 	/* rule matching */
++	c->noswallow = -1;
+ 	c->isfloating = 0;
+ 	c->tags = 0;
+ 	XGetClassHint(dpy, c->win, &ch);
+@@ -298,6 +314,8 @@ applyrules(Client *c)
+ 		&& (!r->class || strstr(class, r->class))
+ 		&& (!r->instance || strstr(instance, r->instance)))
+ 		{
++			c->isterminal = r->isterminal;
++			c->noswallow  = r->noswallow;
+ 			c->isfloating = r->isfloating;
+ 			c->tags |= r->tags;
+ 			for (m = mons; m && m->num != r->monitor; m = m->next);
+@@ -414,6 +432,61 @@ attachstack(Client *c)
+ 	c->mon->stack = c;
+ }
+ 
++void
++swallow(Client *p, Client *c)
++{
++	Client *s;
++
++	if (c->noswallow > 0 || c->isterminal)
++		return;
++	if (c->noswallow < 0 && !swallowfloating && c->isfloating)
++		return;
++
++	detach(c);
++	detachstack(c);
++
++	setclientstate(c, WithdrawnState);
++	XUnmapWindow(dpy, p->win);
++
++	p->swallowing = c;
++	c->mon = p->mon;
++
++	Window w = p->win;
++	p->win = c->win;
++	c->win = w;
++
++	XChangeProperty(dpy, c->win, netatom[NetClientList], XA_WINDOW, 32, PropModeReplace,
++		(unsigned char *) &(p->win), 1);
++
++	updatetitle(p);
++	s = scanner ? c : p;
++	XMoveResizeWindow(dpy, p->win, s->x, s->y, s->w, s->h);
++	arrange(p->mon);
++	configure(p);
++	updateclientlist();
++}
++
++void
++unswallow(Client *c)
++{
++	c->win = c->swallowing->win;
++
++	free(c->swallowing);
++	c->swallowing = NULL;
++
++	XDeleteProperty(dpy, c->win, netatom[NetClientList]);
++
++	/* unfullscreen the client */
++	setfullscreen(c, 0);
++	updatetitle(c);
++	arrange(c->mon);
++	XMapWindow(dpy, c->win);
++	XMoveResizeWindow(dpy, c->win, c->x, c->y, c->w, c->h);
++	setclientstate(c, NormalState);
++	focus(NULL);
++	arrange(c->mon);
++}
++
+ void
+ buttonpress(XEvent *e)
+ {
+@@ -653,6 +726,9 @@ destroynotify(XEvent *e)
+ 
+ 	if ((c = wintoclient(ev->window)))
+ 		unmanage(c, 1);
++
++	else if ((c = swallowingclient(ev->window)))
++		unmanage(c->swallowing, 1);
+ }
+ 
+ void
+@@ -1018,12 +1094,13 @@ killclient(const Arg *arg)
+ void
+ manage(Window w, XWindowAttributes *wa)
+ {
+-	Client *c, *t = NULL;
++	Client *c, *t = NULL, *term = NULL;
+ 	Window trans = None;
+ 	XWindowChanges wc;
+ 
+ 	c = ecalloc(1, sizeof(Client));
+ 	c->win = w;
++	c->pid = winpid(w);
+ 	/* geometry */
+ 	c->x = c->oldx = wa->x;
+ 	c->y = c->oldy = wa->y;
+@@ -1038,6 +1115,7 @@ manage(Window w, XWindowAttributes *wa)
+ 	} else {
+ 		c->mon = selmon;
+ 		applyrules(c);
++		term = termforwin(c);
+ 	}
+ 
+ 	if (c->x + WIDTH(c) > c->mon->mx + c->mon->mw)
+@@ -1074,6 +1152,8 @@ manage(Window w, XWindowAttributes *wa)
+ 	c->mon->sel = c;
+ 	arrange(c->mon);
+ 	XMapWindow(dpy, c->win);
++	if (term)
++		swallow(term, c);
+ 	focus(NULL);
+ }
+ 
+@@ -1384,7 +1464,9 @@ run(void)
+ void
+ scan(void)
+ {
++	scanner = 1;
+ 	unsigned int i, num;
++	char swin[256];
+ 	Window d1, d2, *wins = NULL;
+ 	XWindowAttributes wa;
+ 
+@@ -1395,6 +1477,8 @@ scan(void)
+ 				continue;
+ 			if (wa.map_state == IsViewable || getstate(wins[i]) == IconicState)
+ 				manage(wins[i], &wa);
++			else if (gettextprop(wins[i], netatom[NetClientList], swin, sizeof swin))
++				manage(wins[i], &wa);
+ 		}
+ 		for (i = 0; i < num; i++) { /* now the transients */
+ 			if (!XGetWindowAttributes(dpy, wins[i], &wa))
+@@ -1406,6 +1490,7 @@ scan(void)
+ 		if (wins)
+ 			XFree(wins);
+ 	}
++	scanner = 0;
+ }
+ 
+ void
+@@ -1768,6 +1853,20 @@ unmanage(Client *c, int destroyed)
+ 	Monitor *m = c->mon;
+ 	XWindowChanges wc;
+ 
++	if (c->swallowing) {
++		unswallow(c);
++		return;
++	}
++
++	Client *s = swallowingclient(c->win);
++	if (s) {
++		free(s->swallowing);
++		s->swallowing = NULL;
++		arrange(m);
++		focus(NULL);
++		return;
++	}
++
+ 	detach(c);
+ 	detachstack(c);
+ 	if (!destroyed) {
+@@ -1782,9 +1881,12 @@ unmanage(Client *c, int destroyed)
+ 		XUngrabServer(dpy);
+ 	}
+ 	free(c);
+-	focus(NULL);
+-	updateclientlist();
+-	arrange(m);
++
++	if (!s) {
++		arrange(m);
++		focus(NULL);
++		updateclientlist();
++	}
+ }
+ 
+ void
+@@ -2047,6 +2149,110 @@ view(const Arg *arg)
+ 	arrange(selmon);
+ }
+ 
++pid_t
++winpid(Window w)
++{
++	pid_t result = 0;
++
++	xcb_res_client_id_spec_t spec = {0};
++	spec.client = w;
++	spec.mask = XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID;
++
++	xcb_generic_error_t *e = NULL;
++	xcb_res_query_client_ids_cookie_t c = xcb_res_query_client_ids(xcon, 1, &spec);
++	xcb_res_query_client_ids_reply_t *r = xcb_res_query_client_ids_reply(xcon, c, &e);
++
++	if (!r)
++		return (pid_t)0;
++
++	xcb_res_client_id_value_iterator_t i = xcb_res_query_client_ids_ids_iterator(r);
++	for (; i.rem; xcb_res_client_id_value_next(&i)) {
++		spec = i.data->spec;
++		if (spec.mask & XCB_RES_CLIENT_ID_MASK_LOCAL_CLIENT_PID) {
++			uint32_t *t = xcb_res_client_id_value_value(i.data);
++			result = *t;
++			break;
++		}
++	}
++
++	free(r);
++
++	if (result == (pid_t)-1)
++		result = 0;
++	return result;
++}
++
++pid_t
++getparentprocess(pid_t p)
++{
++	unsigned int v = 0;
++
++#if defined(__linux__)
++	FILE *f;
++	char buf[256];
++	snprintf(buf, sizeof(buf) - 1, "/proc/%u/stat", (unsigned)p);
++
++	if (!(f = fopen(buf, "r")))
++		return (pid_t)0;
++
++	if (fscanf(f, "%*u %*s %*c %u", (unsigned *)&v) != 1)
++		v = (pid_t)0;
++	fclose(f);
++#elif defined(__FreeBSD__)
++	struct kinfo_proc *proc = kinfo_getproc(p);
++	if (!proc)
++		return (pid_t)0;
++
++	v = proc->ki_ppid;
++	free(proc);
++#endif
++	return (pid_t)v;
++}
++
++int
++isdescprocess(pid_t p, pid_t c)
++{
++	while (p != c && c != 0)
++		c = getparentprocess(c);
++
++	return (int)c;
++}
++
++Client *
++termforwin(const Client *w)
++{
++	Client *c;
++	Monitor *m;
++
++	if (!w->pid || w->isterminal)
++		return NULL;
++
++	for (m = mons; m; m = m->next) {
++		for (c = m->clients; c; c = c->next) {
++			if (c->isterminal && !c->swallowing && c->pid && isdescprocess(c->pid, w->pid))
++				return c;
++		}
++	}
++
++	return NULL;
++}
++
++Client *
++swallowingclient(Window w)
++{
++	Client *c;
++	Monitor *m;
++
++	for (m = mons; m; m = m->next) {
++		for (c = m->clients; c; c = c->next) {
++			if (c->swallowing && c->swallowing->win == w)
++				return c;
++		}
++	}
++
++	return NULL;
++}
++
+ Client *
+ wintoclient(Window w)
+ {
+@@ -2138,6 +2344,8 @@ main(int argc, char *argv[])
+ 		fputs("warning: no locale support\n", stderr);
+ 	if (!(dpy = XOpenDisplay(NULL)))
+ 		die("dwm: cannot open display");
++	if (!(xcon = XGetXCBConnection(dpy)))
++		die("dwm: cannot get xcb connection\n");
+ 	checkotherwm();
+ 	setup();
+ #ifdef __OpenBSD__
+-- 
+2.26.2
diff --git a/util.o b/util.o
new file mode 100644
index 0000000000000000000000000000000000000000..8e55fa18d6ada0bfba70d02362b40ffaf2d35ebf
GIT binary patch
literal 2224
zcmbtUO=uHQ5T0$TjWtbT?V(Z+5mrf{E}Ik~q$<%yyGoE+D{3#ACR-cKpPNldRWM>b
zgb?V#qX!Qj6g(94C^YE7t4B}Pqfig^ASe~$%<g;bW7%AE;4w4bd^2zM&3pUsT<Uy}
zBmox*PQ$LpQ2=$%uAQ*V1o&VOu4s*I?a}wI2x$#dj%kfqIiWRDvX*Kj<>?e!*H_wR
z+#gQLxBTIhT=s{b%5|js!_VYZOTUnxTl%%UX6d(b+tTmkPpGq6v+rmK4Gjy1B5kdC
z3LW&mXss1_iv>os)~p=RT1i>`n3Mw^gi#NxEFAoX2Gl1&Yn~v>9Mc*b)Ud}2Xic>0
z4|+TC>cRCO#w|3`vDD_k`T&R4>1-_YvYq&(UG-`$t0N1T`;bZJ^QBB2U}|zQ9t=%g
zx*85f#+9fN2}afExEfO<SfdYD5EmUQQlJN<HevkiCFbu#jAYnWAl;h*sTPn%z5Sk5
zB#$6|n8kjRKI02K?z!mOVzC&D9b&O-J`Y3O746>#KRRyF-kt7tqjojna<I@K>LGz|
z^@i91Tmi-r6@7;rexwT?>Vhj>aGJVXeVmikC-2WXC&VVY@S$qv@=6Aj)T9d8oDLN;
zs~ZL^EtHL1(Of{^$m>N|C|Au4lrdB?K(FOY(Cv$XbxEqW!nxab;7`YvR}81SuooA{
z-!R<Ce=qR+1^#CNry21&8v;&ui{qODF7kg0IK2YS-xhGMfcMh{LZLo;adEzv;q+a!
zI37fsg!r_$oMZ;a`FudBEEml5JZjUh^&+<nJ)c%gy=H=vO`B;@<|`FYj1oCSk0=pP
zGNnR6FCwK_GIa%?-tmf=&fH=C?P66a8zr2Zxs0h)P+z>cV5AE=@9h6{5Yy=>Xttsx
zm@~xAiN_o+jADS!FTn{+*XXcOJS<^9+GN`A)BaCT{20R-oghnQoEtIR36CL8HUBlA
z{(V$4ic1u}Kkt{v`2JicFhDl_*hQIR1pY7NF`mcu1q^VTb4V|_fiBz|h|xO}?<%@b
zWBJa$oZoX7xkPp5zhwE-R7?<Oeja0P^RE+#!uO~7)BEQ6^nWFB+nexTZ2uV3^roq#
jGoNZYXO9r53_MGYAgtUDLjQla{5979{T-%lIP?Dkge?qp

literal 0
HcmV?d00001

-- 
2.43.0

